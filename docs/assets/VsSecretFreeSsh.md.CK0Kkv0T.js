import{_ as a,z as e,o as n,D as p}from"./chunks/framework.CEZ28rDC.js";const t="/BlogByCosy/assets/image-1.Cr_Byfw3.png",i="/BlogByCosy/assets/image-3.CLGwNPUn.png",l="/BlogByCosy/assets/image-2.KkMO5QEB.png",m=JSON.parse('{"title":"Vscode 免密连接远程服务器","description":"Vscode 免密连接远程服务器","frontmatter":{"id":240409103645,"date":"2024/04/09 14:48","title":"Vscode 免密连接远程服务器","tag":"Vscode使用","archive":null,"description":"Vscode 免密连接远程服务器"},"headers":[],"relativePath":"VsSecretFreeSsh.md","filePath":"VsSecretFreeSsh.md"}'),o={name:"VsSecretFreeSsh.md"};function c(d,s,r,h,u,g){return n(),e("div",null,s[0]||(s[0]=[p(`<h1 id="vscode-免密连接远程-ssh" tabindex="-1">Vscode 免密连接远程 ssh <a class="header-anchor" href="#vscode-免密连接远程-ssh" aria-label="Permalink to &quot;Vscode 免密连接远程 ssh&quot;">​</a></h1><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><p>免密登录需要使用私钥钥和公钥，将公钥放在服务器，私钥放在本机并指明私钥路径即可。</p><h2 id="生成私钥和公钥" tabindex="-1">生成私钥和公钥 <a class="header-anchor" href="#生成私钥和公钥" aria-label="Permalink to &quot;生成私钥和公钥&quot;">​</a></h2><p>在任意路径(一般为<code>C:\\Users\\mjren\\.ssh</code>)的控制台中输入。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-keygen</span></span></code></pre></div><p>将有三次输入:</p><ol><li>第一次为私钥公钥的名称，这里为 test。</li><li>第二次为密码，这里直接回车没有设置。</li><li>第三次为确认密码，没有设置密码直接回车。</li></ol><p>如下输出表示生成成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Generating public/private rsa key pair.</span></span>
<span class="line"><span>Enter file in which to save the key (C:\\Users\\mjren/.ssh/id_rsa): test</span></span>
<span class="line"><span>Enter passphrase (empty for no passphrase):</span></span>
<span class="line"><span>Enter same passphrase again:</span></span>
<span class="line"><span>Your identification has been saved in test</span></span>
<span class="line"><span>Your public key has been saved in test.pub</span></span>
<span class="line"><span>The key fingerprint is:</span></span>
<span class="line"><span>SHA256:kYNOdJkjnvV0fsb+YRunmXHBUd1lQYDR9lCKzm9WUTI wzh@DESKTOP-GBINSLM</span></span>
<span class="line"><span>The key&#39;s randomart image is:</span></span>
<span class="line"><span>+---[RSA 3072]----+</span></span>
<span class="line"><span>|      . .o .+.E+@|</span></span>
<span class="line"><span>|     ..o=...o+.=+|</span></span>
<span class="line"><span>|     .o+++ +.o+..|</span></span>
<span class="line"><span>|     oo  o+ . ++.|</span></span>
<span class="line"><span>|      . S  o + ..|</span></span>
<span class="line"><span>|            . ++o|</span></span>
<span class="line"><span>|             +.B=|</span></span>
<span class="line"><span>|            o +..|</span></span>
<span class="line"><span>|                 |</span></span>
<span class="line"><span>+----[SHA256]-----+</span></span></code></pre></div><p>最终会在当前路径下生成私钥文件<code>test</code>和公钥文件<code>test.pub</code>。</p><h2 id="将公钥放入服务器" tabindex="-1">将公钥放入服务器 <a class="header-anchor" href="#将公钥放入服务器" aria-label="Permalink to &quot;将公钥放入服务器&quot;">​</a></h2><p>连接远程服务器，这里使用 Vscode，也可以使用其他方式（如 XSheel，服务器浏览器连接等）。</p><p>在 Vscode 中安装插件<code>Remote-SSH</code>，安装完成后在<code>远程资源管理</code>中打开配置文件。</p><p><img src="`+t+`" alt="alt text"></p><p>添加如下配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host cosy</span></span>
<span class="line"><span>  HostName 122.521.21.251</span></span>
<span class="line"><span>  Port 22</span></span>
<span class="line"><span>  User root</span></span></code></pre></div><blockquote><p>Host：远程连接的名称。<br> HostName：地址，如果有域名也可以用域名。<br> Port：端口，SSH 为 22 端口，注意服务器是否开启了此端口，是否开启防火墙等。<br> User：为登录用户名。</p></blockquote><p>设置完成后在<code>远程资源管理</code>中可以看到添加的服务器并连接。这次连接还是需要密码的。</p><p><img src="`+i+'" alt="alt text"></p><p>打开服务器文件，没有的话就创建一个：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/root/.ssh/authorized_keys</span></span></code></pre></div><p>将刚刚生成的公钥文件内容复制到文件中，文件中有内容的话想换行在复制。</p><p><img src="'+l+`" alt="alt text"></p><h2 id="本机使用私钥" tabindex="-1">本机使用私钥 <a class="header-anchor" href="#本机使用私钥" aria-label="Permalink to &quot;本机使用私钥&quot;">​</a></h2><p>在刚刚的<code>远程资源管理</code>配置中追加配置如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host cosy</span></span>
<span class="line"><span>  HostName 122.521.21.251</span></span>
<span class="line"><span>  Port 22</span></span>
<span class="line"><span>  User root</span></span>
<span class="line"><span>  IdentityFile C:\\Users\\xxx\\.ssh\\test</span></span></code></pre></div><blockquote><p>IdentityFile：私钥文件路径</p></blockquote><p>至此，以后连接该远程将不在需要密码</p><h2 id="服务器多个公钥" tabindex="-1">服务器多个公钥 <a class="header-anchor" href="#服务器多个公钥" aria-label="Permalink to &quot;服务器多个公钥&quot;">​</a></h2><p>在需要给服务器配置多个公钥方便多台电脑连接时，可以把私钥同步，也可以在服务器上存放多个公钥。</p><p>需要在服务器上存放多个公钥时直接在<code>/root/.ssh/authorized_keys</code>文件中换行追加即可。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDbKInL/8zpkQBhGjKWw2/+DRDuTEedCQztlh50aM3LBYc/7ze3aWLwQPLZ/pqx8sM+Ur7g9Z7Vl4qJi56ViWeUdXfc9TCcDl88PlN8g0mJ67d8FLh8M...</span></span>
<span class="line"><span>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzOMdL352fvFVpHKt5yFxxYtxWZnVDnghMFT8PB1DE8AMjUrz3BWuyCWPrVQEg5lftA1KOUsnJqBRNcVoi1yWVfSSW2CXLTbY7bjpKDhQ9iLlc8LtNj...</span></span></code></pre></div><p>这样只要使用其中任意一个对应的私钥都可以进行免密连接。</p>`,34)]))}const k=a(o,[["render",c]]);export{m as __pageData,k as default};
