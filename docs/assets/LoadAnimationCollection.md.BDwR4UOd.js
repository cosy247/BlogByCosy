import{_ as t,b as e,o as d,Q as a}from"./chunks/framework.CUk_15SL.js";const y=JSON.parse('{"title":"CSS 旋转加载动画","description":"CSS 旋转加载动画","frontmatter":{"id":1738983236754,"date":"2025/02/10 17:57","title":"CSS 旋转加载动画","description":"CSS 旋转加载动画","tag":"CSS 前端","archive":null,"recommendations":null,"shadow":false,"top":0},"headers":[],"relativePath":"LoadAnimationCollection.md","filePath":"LoadAnimationCollection.md"}'),o={name:"LoadAnimationCollection.md"};function c(l,i,s,r,v,p){return d(),e("div",null,i[0]||(i[0]=[a('<h1 id="css-旋转加载动画" tabindex="-1">CSS 旋转加载动画 <a class="header-anchor" href="#css-旋转加载动画" aria-label="Permalink to &quot;CSS 旋转加载动画&quot;">​</a></h1><p>:::Dome title=基础旋转 info=&#39;使用 border 画圆&#39;</p><div class="flex"><div class="circle circle1"></div><div class="circle circle2"></div><div class="circle circle3"></div></div><p>:::</p><p>:::Dome title=多层旋转 info=&#39;使用 after before 伪元素&#39;</p><div class="flex"><div class="circle circle1"></div><div class="circle circle2"></div></div><p>:::</p><p>:::Dome title=动态旋转 info=&#39;使用 clip-path 进行切割&#39;</p><div class="flex"><div class="circle circle1"></div></div><p>:::</p><p>:::Dome title=多元素类圆 info=&#39;使用 animation steps 分步播放&#39;</p><div class="flex"><div class="circle circle1"><div style="rotate:0deg;opacity:0.4;"></div><div style="rotate:30deg;opacity:0.45;"></div><div style="rotate:60deg;opacity:0.5;"></div><div style="rotate:90deg;opacity:0.55;"></div><div style="rotate:120deg;opacity:0.6;"></div><div style="rotate:150deg;opacity:0.65;"></div><div style="rotate:180deg;opacity:0.7;"></div><div style="rotate:210deg;opacity:0.75;"></div><div style="rotate:240deg;opacity:0.8;"></div><div style="rotate:270deg;opacity:0.85;"></div><div style="rotate:300deg;opacity:0.9;"></div><div style="rotate:330deg;opacity:0.95;"></div></div><div class="circle circle2"><div style="rotate:0deg;opacity:0.3;"></div><div style="rotate:45deg;opacity:0.4;"></div><div style="rotate:90deg;opacity:0.5;"></div><div style="rotate:135deg;opacity:0.6;"></div><div style="rotate:180deg;opacity:0.7;"></div><div style="rotate:225deg;opacity:0.8;"></div><div style="rotate:270deg;opacity:0.9;"></div><div style="rotate:315deg;opacity:1;"></div></div></div><p>:::</p>',13)]))}const g=t(o,[["render",c]]);export{y as __pageData,g as default};
