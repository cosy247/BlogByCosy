import{_ as e,z as i,o as a,D as l}from"./chunks/framework.CEZ28rDC.js";const r=JSON.parse('{"title":"Vue Cli的 mode 模式和 env 环境变量","description":"Vue Cli 的mode 模式和 env 环境变量","frontmatter":{"id":1737429447213,"date":"2025/01/21 15:35","title":"Vue Cli的 mode 模式和 env 环境变量","description":"Vue Cli 的mode 模式和 env 环境变量","tag":"Vue 前端","archive":null,"recommendations":1737444286721,"shadow":false,"top":0},"headers":[],"relativePath":"VueCliModeAndEnv.md","filePath":"VueCliModeAndEnv.md"}'),n={name:"VueCliModeAndEnv.md"};function t(p,s,h,o,d,k){return a(),i("div",null,s[0]||(s[0]=[l(`<h1 id="vue-cli-的-mode-模式和-env-环境变量" tabindex="-1">Vue Cli 的 mode 模式和 env 环境变量 <a class="header-anchor" href="#vue-cli-的-mode-模式和-env-环境变量" aria-label="Permalink to &quot;Vue Cli 的 mode 模式和 env 环境变量&quot;">​</a></h1><p>在一个项目的开发过程通常会有开发，测试，发布等过程，在这些不同过程中常常会有一些配置差异（例如请求的 API 基础地址，错误日志的分类，网站的标题图标等）。开发，测试，发布可以看作不同的运行模式（mode 模式），我们可以更加不同模式写入不同的配置（env 环境变量）。</p><h2 id="模式" tabindex="-1">模式 <a class="header-anchor" href="#模式" aria-label="Permalink to &quot;模式&quot;">​</a></h2><p>Vue CLI 默认提供了三种默认模式，用于区分开发、测试和生产环境：</p><ul><li>development：用于开发环境，通过 <code>vue-cli-service serve</code> 启动。</li><li>production：用于生产环境，通过 <code>vue-cli-service build</code> 构建。</li><li>test：用于单元测试环境，通过 <code>vue-cli-service test:unit</code> 启动。</li></ul><p>也可以在启动时使用--mode 参数覆盖，如将 mode 设置为 temp：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue-cli-service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temp</span></span></code></pre></div><p>Vue Cli 在不同模式下会自动查找对应的 env 配置文件。</p><h2 id="env-文件" tabindex="-1">env 文件 <a class="header-anchor" href="#env-文件" aria-label="Permalink to &quot;env 文件&quot;">​</a></h2><p>一般 env 文件与 package.json 文件同级，名称为 <code>.env[.mode](.local)</code>。如 <code>.env</code>，<code>.env.development</code>，<code>.env.development.local</code>。</p><ul><li><code>.env</code> 在任何模式都会加载</li><li><code>.env.development</code> 在 development 模式加载</li><li><code>.env.development.local</code> 在 development 模式加载，一般不会上传 git（.gitignore 中配置了 <code>*.local</code>）</li></ul><p>文件内容为每行键值对形式存在，如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FOO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">userId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VUE_APP_NOT_SECRET_CODE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">some_value</span></span></code></pre></div><p>如果想修改环境变量但是不修改 env 文件，可以在 package.json 的运行命令行中直接写入：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set VUE_APP_USER_KEY=UserName &amp;&amp; vue-cli-service serve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set VUE_APP_USER_KEY=UserId &amp;&amp; set VUE_APP_API=https &amp;&amp; vue-cli-service build&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当一个值可以被多种方式或文件定义时，<code>命令行</code> &gt; <code>.env.development.local</code> &gt; <code>.env.development</code> &gt; <code>.env</code>;</p><p>并不是全部 env 配置都会被加载，只有名为 <code>NODE_ENV</code> 或 <code>BASE_URL</code> 和以 <code>VUE_APP_</code> 开头的属性才会被加载。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">development</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 满足</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VUE_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2.2.3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 不满足</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VUE_APP_BASE_API</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">localhost:8080/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 满足</span></span></code></pre></div><ul><li><code>NODE_ENV</code> 会是 &quot;development&quot;、&quot;production&quot; 或 &quot;test&quot; 中的一个。具体的值取决于应用运行的模式。</li><li><code>BASE_URL</code> 会和 vue.config.js 中的 publicPath 选项相符，即你的应用会部署到的基础路径。</li></ul><blockquote><blockquote><p>由于任何环境变量都是一次读取的，所以在更改后需要重启服务器才可以获取到新值。</p></blockquote></blockquote><h2 id="读取-env-属性" tabindex="-1">读取 env 属性 <a class="header-anchor" href="#读取-env-属性" aria-label="Permalink to &quot;读取 env 属性&quot;">​</a></h2><p>在项目中可以访问 <code>process.env.[envName]</code> 来获取具体的值。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;development&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;localhost:8080/&#39;</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://cli.vuejs.org/zh/guide/mode-and-env.html" target="_blank" rel="noreferrer">模式和环境变量 | Vue CLI</a></p>`,25)]))}const E=e(n,[["render",t]]);export{r as __pageData,E as default};
